# this is the snakemake pipeline for analysis the metagenomic data

from Bio import SeqIO
from Bio.SeqUtils import GC
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

configfile: "config/config.yml"

BARCODES = ["barcode01", "barcode02", "barcode03", "barcode04", "barcode05", "barcode06"]

rule all:
    input:
        expand("results/emu/{barcode}.sam", barcode = BARCODES)

rule dorado_basecall:
    output:
        bam = "results/dorado/output.bam"
    threads: 4
    params:
        input_dir = config["raw_data_dir"],
        model = config["dorado_model"],
        dorado = config["dorado_path"]
    resources:
        mem_mb = 16000,
        partition = "gpu",
        slurm = "gpus=2"
    shell:
        """
        {params.dorado} basecaller -r {params.model} {params.input_dir} > {output.bam}
        """

rule sort_bam:
    input:
        "results/dorado/output.bam"
    output:
        "results/dorado/sorted/output.sorted.bam"
    conda:
        "envs/readtools.yml"
    threads: 16
    resources:
        mem_mb = 16000
    shell:
        """
        samtools sort -@ {threads} -o {output} {input}
        """

rule debarcode:
    input:
        "results/dorado/sorted/output.sorted.bam"
    output:
        "results/debarcoded/barcoding_summary.txt",
        expand("results/debarcoded/{barcode}/fastq_runid_unknown_0.fastq", barcode = BARCODES)
    threads: 4
    resources:
        mem_mb = 450000,
        partition = "gpu",
        slurm = "gpus=1"
    shell:
        """
        $APPS/ont-guppy/bin/guppy_barcoder -i results/dorado/sorted/ --save_path results/debarcoded/ --barcode_kits SQK-NBD114-24 -t 4 -q 0 --enable_trim_barcodes
        """

rule filter_reads:
    input:
        "results/debarcoded/{barcode}/fastq_runid_unknown_0.fastq"
    output:
        "results/filtered/{barcode}.fastq"
    conda:
        "envs/readtools.yml"
    threads: 1
    resources:
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        chopper -q 20 --minlength 1000 --maxlength 2000 < {input} > {output}
        """

rule emu:
    input:
        "results/filtered/{barcode}.fastq"
    output:
        "results/emu/{barcode}.sam"
    conda:
        "envs/emu.yml"
    threads: 16
    resources:
        mem_mb = 16000
    shell:
        """
        emu abundance --db silva --threads {threads} --output-dir results/emu --output-basename {wildcards.barcode} {input}
        """