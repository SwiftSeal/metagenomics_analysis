# this is the snakemake pipeline for analysis the metagenomic data

configfile: "config/config.yml"

BARCODES = ["barcode01", "barcode02", "barcode03", "barcode04", "barcode05", "barcode06"]

rule all:
    input:
        "results/top-10-genera.pdf",
        "results/emu-data.tsv"

rule dorado_basecall:
    output:
        bam = "results/dorado/output.bam"
    threads: 4
    params:
        input_dir = config["raw_data_dir"],
        model = config["dorado_model"],
        dorado = config["dorado_path"]
    resources:
        mem_mb = 16000,
        partition = "gpu",
        slurm = "gpus=2"
    shell:
        """
        {params.dorado} basecaller -r {params.model} {params.input_dir} > {output.bam}
        """

rule sort_bam:
    input:
        "results/dorado/output.bam"
    output:
        "results/dorado/sorted/output.sorted.bam"
    conda:
        "envs/readtools.yml"
    threads: 16
    resources:
        mem_mb = 16000
    shell:
        """
        samtools sort -@ {threads} -o {output} {input}
        """

rule debarcode:
    input:
        "results/dorado/sorted/output.sorted.bam"
    output:
        "results/debarcoded/barcoding_summary.txt",
        expand("results/debarcoded/{barcode}/fastq_runid_unknown_0.fastq", barcode = BARCODES)
    threads: 4
    resources:
        mem_mb = 450000,
        partition = "gpu",
        slurm = "gpus=1"
    shell:
        """
        $APPS/ont-guppy/bin/guppy_barcoder -i results/dorado/sorted/ --save_path results/debarcoded/ --barcode_kits SQK-NBD114-24 -t 4 -q 0 --enable_trim_barcodes
        """

rule filter_reads:
    input:
        "results/debarcoded/{barcode}/fastq_runid_unknown_0.fastq"
    output:
        "results/filtered/{barcode}.fastq"
    conda:
        "envs/readtools.yml"
    threads: 1
    resources:
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        chopper -q 20 --minlength 1000 --maxlength 2000 < {input} > {output}
        """

rule get_emu_database:
    output:
        "results/emudb/taxonomy.tsv"
    params:
        emu_database = "emu"
    conda:
        "envs/osfclient.yml"
    shell:
        """
        osf -p 56uf7 fetch osfstorage/emu-prebuilt/{params.emu_database}.tar
        tar -xvf {params.emu_database}.tar -C results/emudb/
        """

rule emu:
    input:
        "results/filtered/{barcode}.fastq",
        "results/emudb/taxonomy.tsv"
    output:
        "results/emu/{barcode}_rel-abundance.tsv"
    conda:
        "envs/emu.yml"
    threads: 16
    resources:
        mem_mb = 10000
    shell:
        """
        emu abundance --db "results/emudb" --threads {threads} --keep-counts --output-dir results/emu --output-basename {wildcards.barcode} {input}
        """

rule emu_subsample:
    input:
        "results/debarcoded/{barcode}/fastq_runid_unknown_0.fastq"
    output:
        subsampled_fastq = temp("results/emu_subsample/{barcode}_{proportion}.fastq"),
        emu = "results/emu_subsample/{barcode}_{proportion}_rel-abundance.tsv"
    conda:
        "envs/emu.yml"
    threads: 16
    resources:
        mem_mb = 10000
    shell:
        """
        seqkit sample -p {wilcards.proportion} {input} > {output.subsampled_fastq}
        emu abundance --db silva --threads {threads} --output-dir results/emu_subsample --output-basename {wildcards.barcode}_{wildcards.proportion} {output.subsampled_fastq}
        """

rule clean_and_plot:
    input:
        expand("results/emu/{barcode}_rel-abundance.tsv", barcode = BARCODES)
    output:
        "results/top-10-genera.pdf",
        "results/emu-data.tsv"
    params:
        emu_directory = "results/emu"
    conda:
        "envs/R.yml"
    shell:
        """
        Rscript workflow/scripts/plotting.R {params.emu_directory}
        """
